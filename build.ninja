cross   = mipsel-linux-gnu-

jfdir   = tools/jfcomp
jfcomp  = $jfdir/jfcomp

makeiso = mkpsxiso
dumpiso = dumpsxiso

cflags  = -Iinclude -Ipsyq $
          -O1 -G0 -fno-zero-initialized-in-bss -msoft-float $
          -march=r3000 -mtune=r3000 -mabi=32 -EL -mno-abicalls $
          -fno-stack-protector
ldflags = --no-check-sections -nostdlib -s

cflagsnat   = -O2


# TODO: using the included standard libraries or a nugget one

rule ccnat
    command = gcc $cflagsnative $in -o $out

rule cc
    command = ${cross}gcc $cflags -c $in -o $out

rule link
    command = ${cross}ld $ldflagas -Map=build/$modid.map $
              -T $modid.ld -T symbols.$modid.ld $in -o $out
rule objcopy
    command = ${cross}objcopy -O binary $in $out

rule copy
    command = cp $in $out

rule decomp
    command = $jfcomp decomp $in $out

rule comp
    command = $jfcomp comp $in $out

rule mkiso
    command = $makeiso -y $in -o $out
# todo: this is ugly: 
rule dumpiso
    command = $dumpiso -s us.xml $in -x $out

### building the tools (jfcomp, mkpsxiso etc.)
build tools: phony $jfcomp

build $jfcomp: ccnat $jfdir/main.c $jfdir/comp.c $jfdir/decomp.c

### building the objects
build build/header.o: cc src/header.s

## jm1
build build/jm1/1268.o: cc src/jm1/1268.c
build build/jm1/4DC00.data.o: cc asm/jm1/data/4DC00.data.s
build build/jm1/800.rodata.o: cc asm/jm1/data/800.rodata.s

build build/jm1.elf: link build/header.o build/jm1/1268.o build/jm1/4DC00.data.o build/jm1/800.rodata.o 
    modid = jm1
build build/jm1.exe: objcopy build/jm1.elf
build build/disc/JM1.PEX: comp build/jm1.exe | $jfcomp


## gameover
build build/gameover/C094.o: cc src/gameover/C094.c
build build/gameover/DAB0.data.o: cc asm/gameover/data/DAB0.data.s
build build/gameover/800.rodata.o: cc asm/gameover/data/800.rodata.s

build build/gameover.elf: link build/header.o build/gameover/C094.o build/gameover/DAB0.data.o build/gameover/800.rodata.o 
    modid = gameover
build build/gameover.exe: objcopy build/gameover.elf
build build/disc/GAMEOVER.PEX: comp build/gameover.exe | $jfcomp


## main
build build/main/libcd.o: cc src/main/libcd.c
build build/main/decode.o: cc src/main/decode.s
build build/main/libetc.o: cc src/main/libetc.c
build build/main/main.o: cc src/main/main.c
build build/main/start.o: cc src/main/start.s
build build/main/274C.o: cc src/main/274C.c
build build/main/libsnd.o: cc src/main/libsnd.c
build build/main/boot.o: cc src/main/boot.c
build build/main/libpress.o: cc src/main/libpress.c
build build/main/libgpu/prims.o: cc src/main/libgpu/prims.c
build build/main/libgpu/core.o: cc src/main/libgpu/core.c
build build/main/libapi/rcnt.o: cc src/main/libapi/rcnt.c
build build/main/libapi/kern.o: cc src/main/libapi/kern.s
build build/main/1A214.data.o: cc asm/main/data/1A214.data.s
build build/main/1D530.data.o: cc asm/main/data/1D530.data.s
build build/main/libpress.rodata.o: cc asm/main/data/libpress.rodata.s
build build/main/3066C.bss.o: cc asm/main/data/3066C.bss.s
build build/main/libetc.rodata.o: cc asm/main/data/libetc.rodata.s
build build/main/libcd.rodata.o: cc asm/main/data/libcd.rodata.s
build build/main/libgpu.rodata.o: cc asm/main/data/libgpu.rodata.s
build build/main/libsnd.rodata.o: cc asm/main/data/libsnd.rodata.s

build build/main.elf: link build/header.o build/main/libcd.o build/main/decode.o build/main/libetc.o build/main/main.o build/main/start.o build/main/274C.o build/main/libsnd.o build/main/boot.o build/main/libpress.o build/main/libgpu/prims.o build/main/libgpu/core.o build/main/libapi/rcnt.o build/main/libapi/kern.o build/main/1A214.data.o build/main/1D530.data.o build/main/libpress.rodata.o build/main/3066C.bss.o build/main/libetc.rodata.o build/main/libcd.rodata.o build/main/libgpu.rodata.o build/main/libsnd.rodata.o 
    modid = main
build build/disc/SCUS_941.03: objcopy build/main.elf


### generating the disc
# TODO: this doesn't even work
default build/disc/SCUS_941.03 build/disc/GAMEOVER.PEX

### extra: rules for extracting the data from the original disc
# TODO: maybe these should just be a shell script?
# TODO: the xml points to the original
# default aloha.bin
